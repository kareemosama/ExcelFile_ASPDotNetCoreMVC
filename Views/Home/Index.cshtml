@using Upload_Folder_MVC.Models.ViewModel;

@model IEnumerable<FolderVM>

@{
    ViewData["Title"] = "Home Page";
}




<div class="row mt-4">
    <div class="col-md-8 offset-md-2">

        <table class="table">
            <thead>
                <tr class="text-center">
                    <th> File Name</th>
                    <th> File </th>
                    <th> User  </th>
                   
                        <th>Actions</th>
                    
                </tr>
            </thead>
            <tbody >
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td class="align-middle"> @Html.DisplayFor(modelItem => item.FileName)</td>
                        <td class="align-middle">@Html.DisplayFor(modelItem => item.FileId)</td>
                        <td class="align-middle">@Html.DisplayFor(modelItem => item.UserName)</td>
                        
                            <td class="align-middle">
                                <a class="btn btn-outline-primary" asp-controller="Home" asp-action="Download" asp-route-id="@item.FileId"><i class="bi bi-pencil-square"></i>Download</a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                <a class="btn btn-outline-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@item.FileId"><i class="bi bi-trash"></i>Delete</a>
                            }
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@*
@model IEnumerable<Actor>

@{
    ViewData["Title"] = "List of Actors";
}

<div class="row">
    <div class="col-md-8 offset-md-2">

        <table class="table">
            <thead>
                <tr class="text-center">
                    <th> @Html.DisplayNameFor(model => model.ProfilePictureURL) </th>
                    <th> @Html.DisplayNameFor(model => model.FullName) </th>
                    <th> @Html.DisplayNameFor(model => model.Bio) </th>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="align-middle">
                            <img class="rounded-circle" src="@item.ProfilePictureURL" alt="@item.FullName" style="max-width : 150px">
                        </td>
                        <td class="align-middle">@Html.DisplayFor(modelItem => item.FullName)</td>
                        <td class="align-middle">@Html.DisplayFor(modelItem => item.Bio)</td>
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <td class="align-middle">
                                <a class="btn btn-outline-primary" asp-controller="Actors" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i>Edit</a>
                                <a class="btn btn-outline-info" asp-controller="Actors" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i>Details</a>
                                <a class="btn btn-outline-danger" asp-controller="Actors" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i>Delete</a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@await Html.PartialAsync("_CreateItem","Actors")*@